name: Build Container Image
description: Opinionated container image build.

inputs:
  artifact:
    description: Name of the artifact to upload the image as.
    default: image
    required: false
  context:
    description: Context to use for building the container image.
    default: .
    required: false
  password:
    description: Password for image registry authentication.
    required: true
  registry:
    default: ghcr.io
    description: Container image registry.
    required: false
  repository:
    description: Name of the image repository.
    required: true
  username:
    description: Username for image registry authentication.
    required: true

outputs:
  digest:
    description: Image content-addressable identifier also called a digest.
    value: ${{ steps.build.outputs.digest }}

runs:
  using: "composite"
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to ghcr.io
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}

    - name: Calculate image metadata
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ inputs.registry}}/${{ inputs.repository }}
        tags: |
          type=edge,branch=main
          type=ref,event=branch
          type=ref,event=tag
          type=schedule
          type=sha,format=long,prefix=
      
    - name: Build image
      id: build
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: ${{ inputs.context }}
        labels: ${{ steps.meta.outputs.labels }}
        load: true
        outputs: type=docker,dest=${{ runner.temp }}/image.tar
        tags: ${{ steps.meta.outputs.tags }}

    - name: Store metadata
      env:
        METADATA: ${{ steps.meta.outputs.json }}
      run: |
        echo "${METADATA}" > "${{ runner.temp }}/metadata.json"
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        if-no-files-found: error
        name: ${{ inputs.artifact }}
        path: |
          ${{ runner.temp }}/image.tar
          ${{ runner.temp }}/metadata.json
        retention-days: 1
        